# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  release:
    name: Release, and Publish Go Package
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '^1.18'

    - name: Build
      run: |
          go mod tidy
          go build -o my-library

    - name: Test
      run: go test -v ./...
    
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}  # Use the pushed tag as release name
        release_name: ${{ github.ref }}
        draft: false
        prerelease: false
    
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./my-library
        asset_name: my-library
        asset_content_type: application/octet-stream

    - name: Publish Go Package to GitHub Packages
      run: |
        echo "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}" >> ~/.npmrc
        go mod tidy
        go build -o my-package
        echo "Publishing Go package..."
        GOPROXY=https://proxy.golang.org,direct go publish github.com/${{ github.repository }}
    
    - name: Generate Installation Instructions
      run: |
        echo "To install this package, run the following command:"
        echo "go get github.com/${{ github.repository }}@${{ github.ref }}"